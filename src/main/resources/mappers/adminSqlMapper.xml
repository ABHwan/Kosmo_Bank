<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.spring.bank.admin.dao.AdminDAO">

	<!-- 관리자 로그인 -->
	<select id="SelectUser" parameterType="String" resultType="com.spring.bank.user.vo.UserVO">
    	SELECT * FROM admin WHERE member_id = #{member_id}
    </select>
	
	<!-- 관리자페이지 회원수(전체) -->
	<select id="getCustomerCnt" resultType="int">
		SELECT COUNT(*) as cnt FROM members
	</select>
	
	<!-- 관리자페이지(회원목록) -->
	<select id="getCustomerList" parameterType="java.util.Map" resultType="com.spring.bank.user.vo.UserVO">
		<![CDATA[
		SELECT * FROM
			(SELECT member_id, member_name, member_birth, member_hp, member_email, member_indate, member_addr1, member_addr2, member_addr3, member_zipcode, rowNum rNum 
				FROM (SELECT * FROM members ORDER BY member_indate DESC)
			) WHERE rNum >= #{start} and rNum <= #{end}
		]]>	
	</select>
	
	<!-- 관리자페이지 회원수(검색어별) -->
	<select id="getCustomerSearchCnt" parameterType="String" resultType="int">
		<![CDATA[ 
		SELECT COUNT(*) as cnt FROM members WHERE member_name LIKE '%'||#{search}||'%'
		]]>
	</select>
	
	<!-- 관리자페이지(회원검색) -->
	<select id="getCustomerSearchList" parameterType="java.util.Map" resultType="com.spring.bank.user.vo.UserVO">
		<![CDATA[
		SELECT * FROM
			(SELECT member_id, member_name, member_birth, member_hp, member_email, member_indate, member_addr1, member_addr2, member_addr3, member_zipcode, rowNum rNum 
				FROM (SELECT * FROM members WHERE member_name LIKE '%'||#{search}||'%' ORDER BY member_indate DESC)
			) WHERE rNum >= #{start} and rNum <= #{end}
		]]>	
	</select>
	
	<!-- 관리자 회원삭제 -->
	<delete id="deleteCustomer" parameterType="String">
		DELETE FROM members WHERE member_id IN ( #{member_id} )
	</delete>
	
	<!-- 관리자 페이지 예금 상품 등록 -->
	<insert id="insertDepositProduct" parameterType="com.spring.bank.product.vo.DepositProductVO">
		INSERT INTO deposit_product(deposit_product_name, deposit_product_summary, deposit_product_date, deposit_product_interRate, deposit_product_type, deposit_product_maxDate, deposit_product_minDate, deposit_product_minPrice, deposit_product_explanation, deposit_product_notice, deposit_product_bankCode)
		VALUES(#{deposit_product_name}, #{deposit_product_summary}, sysdate, #{deposit_product_interRate}, #{deposit_product_type}, #{deposit_product_maxDate}, #{deposit_product_minDate}, #{deposit_product_minPrice}, #{deposit_product_explanation}, #{deposit_product_notice}, #{deposit_product_bankCode})
	</insert>
	
	<!-- 관리자 페이지 예금 상품 수 -->
	<select id="getDepositProductCnt" resultType="int">
		SELECT COUNT(*) as cnt FROM deposit_product
	</select>
	
	<!-- 관리자 페이지 예금 상품 조회 -->
	<select id="selectDepositProduct" parameterType="java.util.Map" resultType="com.spring.bank.product.vo.DepositProductVO">
		<![CDATA[
		SELECT * FROM
			(SELECT deposit_product_name, deposit_product_summary, deposit_product_date, deposit_product_interrate, deposit_product_type, deposit_product_maxdate, deposit_product_mindate, deposit_product_minprice, deposit_product_bankcode, rowNum rNum 
				FROM (SELECT * FROM deposit_product ORDER BY deposit_product_date DESC)
			) WHERE rNum >= #{start} and rNum <= #{end}
		]]>	
	</select>
	
	<!-- 관리자 페이지 예금 상품 수(검색결과수)  -->
	<select id="getDepositProductSearchCnt" parameterType="String" resultType="int">
		<![CDATA[ 
		SELECT COUNT(*) as cnt FROM deposit_product WHERE deposit_product_name LIKE '%'||#{search}||'%'
		]]>
	</select>
	
	<!-- 관리자 페이지 예금 상품 검색(입력받아서 검색) -->
	<select id="searchDepositProduct" parameterType="java.util.Map" resultType="com.spring.bank.product.vo.DepositProductVO">
		<![CDATA[
		SELECT * FROM
			(SELECT deposit_product_name, deposit_product_summary, deposit_product_date, deposit_product_interrate, deposit_product_type, deposit_product_maxdate, deposit_product_mindate, deposit_product_minprice, deposit_product_bankcode, rowNum rNum 
				FROM (SELECT * FROM deposit_product WHERE deposit_product_name LIKE '%'||#{search}||'%' ORDER BY deposit_product_date DESC)
			) WHERE rNum >= #{start} and rNum <= #{end}
		]]>	
	</select>
	
	<!-- 관리자 페이지 예금 상품 상세조회 -->
	<select id="getDepositProductInfo" parameterType="String" resultType="com.spring.bank.product.vo.DepositProductVO">
		SELECT * FROM deposit_product WHERE deposit_product_name=#{deposit_product_name}
	</select>
	
	<!-- 관리자 페이지 예금 상품 수정 -->
	<update id="updateDepositProduct" parameterType="com.spring.bank.product.vo.DepositProductVO">
		UPDATE deposit_product set deposit_product_summary=#{deposit_product_summary}, deposit_product_interRate=#{deposit_product_interRate}, deposit_product_type=#{deposit_product_type}, deposit_product_maxDate=#{deposit_product_maxDate}, deposit_product_minDate=#{deposit_product_minDate}, deposit_product_minPrice=#{deposit_product_minPrice}, deposit_product_explanation=#{deposit_product_explanation}, deposit_product_notice=#{deposit_product_notice}
			WHERE deposit_product_name=#{deposit_product_name}
	</update>
	
	<!-- 관리자 페이지 예금 상품 삭제 -->
	<delete id="deleteDepositProduct" parameterType="String">
		DELETE FROM deposit_product WHERE deposit_product_name IN ( #{deposit_product_name} )
	</delete>
	
	<!-- 진지현 작성 -->
	<!-- 문의사항 갯수 -->
	<select id="getInquiryCnt" resultType="int" >
		SELECT COUNT(*) as cnt FROM inquiry
	</select>

	<!-- 문의사항 리스트 조회 -->
	<select id="getInquiryList" resultType="com.spring.bank.user.vo.InquiryVO" parameterType="java.util.Map" >
		<![CDATA[
			SELECT * 
				FROM (SELECT inquiry_id, inquiry_title, inquiry_content, member_id, inquiry_ref, inquiry_regDate
						, rowNUM rNum 
						 FROM (SELECT * FROM inquiry ORDER BY inquiry_ref DESC))
				WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>

	<!-- 자주묻는 질문 갯수 -->
	<select id="getFaqCnt" resultType="int" >
		SELECT COUNT(*) as cnt FROM faq
	</select>
	
	<!-- 자주묻는 질문조회-->
	<select id="getFaqList" resultType="com.spring.bank.user.vo.faqVO" parameterType="java.util.Map" >
		<![CDATA[
			SELECT * 
				FROM (SELECT faq_id, faq_title, faq_content, faq_regDate,rowNUM rNum 
						 FROM (SELECT * FROM faq ORDER BY faq_id))
				WHERE rNum >= #{start} AND rNum <= #{end}
		]]>
	</select>
	
	<!-- 자주묻는 질문 추가 -->
	<insert id ="faqAdd" parameterType="com.spring.bank.user.vo.faqVO" >
		INSERT INTO faq(faq_id, faq_title, faq_content, faq_regDate)
		VALUES(faq_seq.nextval, #{faq_title}, #{faq_content}, sysdate)
	</insert>
	
	<!-- faq 수정 상세 조회 -->
	<select id="getFaqDetail" parameterType="int" resultType="com.spring.bank.user.vo.faqVO">
		SELECT * FROM faq 
		WHERE faq_id=#{faq_id} 
	</select>
	
	<!-- faq 수정 처리 -->
	<update  id="updateFaq" parameterType="com.spring.bank.user.vo.faqVO">
		UPDATE faq SET faq_id=#{faq_id}, faq_title=#{faq_title}, faq_content=#{faq_content} 
		WHERE faq_id=#{faq_id}
	</update>
	
	<!-- faq 삭제 -->
	<delete id ="deleteFaq" parameterType="int">
		DELETE FROM faq 
		WHERE faq_id=#{faq_id} 
	</delete>
	
	<!-- 관리자 회원계좌수 -->
	<select id="getCustomerAccountCnt" resultType="int">
		SELECT COUNT(*) cnt FROM members m, account a WHERE m.member_id = a.member_id
	</select>
	
	<!-- 관리자 회원계좌목록 -->
	<select id="getCustomerAccountList" parameterType="java.util.Map" resultType="com.spring.bank.user.vo.CustomerAccountVO">
		<![CDATA[
		SELECT * FROM (      
			SELECT member_name, member_birth, account_bankCode, account_id, account_type, account_state, account_stateContent, rowNum as rNum
	  		FROM ( select * from members m, account a WHERE m.member_id = a.member_id ORDER BY account_newdate DESC)
      				 ) where rNum>=#{start} and rNum<=#{end}
      	]]>		 
	</select>
	
	<!-- 관리자 회원계좌 검색결과 수 -->
	<select id="getSerachCustomerAccountCnt" parameterType="String" resultType="int">
		<![CDATA[
		SELECT COUNT(*) cnt FROM members m, account a WHERE m.member_id = a.member_id and m.member_name LIKE '%'||#{search}||'%' or a.account_id LIKE '%'||#{search}||'%'
		]]>
	</select>
	
	<!-- 관리자 회원계좌 검색결과목록 -->
	<select id="getSearchCustomerAccountList" parameterType="java.util.Map" resultType="com.spring.bank.user.vo.CustomerAccountVO">
		<![CDATA[
		SELECT * FROM (      
			SELECT member_name, member_birth, account_bankCode, account_id, account_type, account_state, account_stateContent, rowNum as rNum
	  		FROM ( select * from members m, account a WHERE m.member_id = a.member_id and m.member_name LIKE '%'||#{search}||'%' or a.account_id LIKE '%'||#{search}||'%' ORDER BY account_newdate DESC)
      				 ) where rNum>=#{start} and rNum<=#{end}
      	]]>	
	</select>
</mapper>